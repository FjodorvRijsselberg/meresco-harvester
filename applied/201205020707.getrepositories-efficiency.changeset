Changeset created on Wed May 02 07:07:16 UTC 2012 by Seecr (Seek You Too B.V.)

Description: GetRepositories more efficient

    The saharaget verb 'GetRepositories' has improved by implementing it in the internalserver.

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-harvester/workingsets/8.1.2-Edurep/version_0

diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/deps.txt /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/deps.txt
--- version_0/deps.txt	2012-05-01 11:28:23.000000000 +0200
+++ version_1/deps.txt	2012-05-02 09:06:55.000000000 +0200
@@ -10,6 +10,6 @@
 python-meresco-core (<< 4.1)
 python-meresco-components (>= 4.0)
 python-meresco-components (<< 4.1)
-python-dynamichtml (>= 1.0)
-python-dynamichtml (<< 1.1)
+python-dynamichtml (>= 1.1)
+python-dynamichtml (<< 1.2)
 
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/harvester/controlpanel/html/dynamic/get.sf /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/meresco/harvester/controlpanel/html/dynamic/get.sf
--- version_0/meresco/harvester/controlpanel/html/dynamic/get.sf	1970-01-01 01:00:00.000000000 +0100
+++ version_1/meresco/harvester/controlpanel/html/dynamic/get.sf	2012-05-02 09:06:55.000000000 +0200
@@ -0,0 +1,47 @@
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011-2012 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+
+def main(arguments, **kwargs):
+    verb = arguments['verb'][0]
+    messageKwargs = dict((k,values[0]) for k,values in arguments.items() if k != 'verb')
+    message = verb[0].lower() + verb[1:]
+
+    yield """<?xml version="1.0" encoding="UTF-8"?>
+<saharaget xmlns="http://sahara.cq2.org/xsd/saharaget.xsd">"""
+    yield """<responseDate>%s</responseDate>""" % time.strftime('%Y-%m-%dT%H:%M:%SZ', time.gmtime())
+    yield "<request>"
+    yield '<verb>%s</verb>' % verb
+    for key, value in sorted(messageKwargs.items()):
+        yield '<%s>%s</%s>' % (key, escapeXml(value), key)
+    yield "</request>"
+    yield observable.any.unknown(message=message, **messageKwargs)
+    yield """</saharaget>"""
+
Only in version_0/meresco/harvester/controlpanel/html/dynamic: getStatus.sf
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/harvester/controlpanel/html/dynamic/invalidRecord.sf /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/meresco/harvester/controlpanel/html/dynamic/invalidRecord.sf
--- version_0/meresco/harvester/controlpanel/html/dynamic/invalidRecord.sf	2012-05-01 11:28:23.000000000 +0200
+++ version_1/meresco/harvester/controlpanel/html/dynamic/invalidRecord.sf	2012-05-02 09:06:55.000000000 +0200
@@ -7,8 +7,8 @@
 # Seek You Too B.V. (CQ2) http://www.cq2.nl 
 # 
 # Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
-# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
-# 
+# Copyright (C) 2011-2012 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # 
 # This file is part of "Meresco Harvester"
 # 
@@ -36,7 +36,7 @@
     yield """<div>
     <h3>Repository %s - Record %s</h3>""" % (escapeHtml(repositoryId), escapeHtml(recordId))
 
-    invalidRecord = call.getInvalidRecord(domainId, repositoryId, recordId)
+    invalidRecord = observable.call.getInvalidRecord(domainId, repositoryId, recordId)
 
     diagnosticsDetails = xpath(invalidRecord, '//diag:diagnostic/diag:details/text()')
     yield "<pre>%s</pre>" % escapeHtml(diagnosticsDetails[0] if diagnosticsDetails else "No error message.")
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/harvester/controlpanel/html/dynamic/invalid.sf /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/meresco/harvester/controlpanel/html/dynamic/invalid.sf
--- version_0/meresco/harvester/controlpanel/html/dynamic/invalid.sf	2012-05-01 11:28:23.000000000 +0200
+++ version_1/meresco/harvester/controlpanel/html/dynamic/invalid.sf	2012-05-02 09:06:55.000000000 +0200
@@ -7,8 +7,8 @@
 # Seek You Too B.V. (CQ2) http://www.cq2.nl 
 # 
 # Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
-# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
-# 
+# Copyright (C) 2011-2012 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # 
 # This file is part of "Meresco Harvester"
 # 
@@ -39,7 +39,7 @@
 
     yield '<table class="event">'
     yield '<tr><td class="eventheader">Invalid records</td></tr>'
-    for id in call.invalidRecords(domainId, repositoryId):
+    for id in observable.call.invalidRecords(domainId, repositoryId):
         recordId = id.split(":", 1)[-1]
         args = {'recordId': recordId}
         args.update(orginalArgs)
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/harvester/controlpanel/html/dynamic/rss.sf /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/meresco/harvester/controlpanel/html/dynamic/rss.sf
--- version_0/meresco/harvester/controlpanel/html/dynamic/rss.sf	2012-05-01 11:28:23.000000000 +0200
+++ version_1/meresco/harvester/controlpanel/html/dynamic/rss.sf	2012-05-02 09:06:55.000000000 +0200
@@ -8,7 +8,8 @@
 # 
 # Copyright (C) 2010-2011 Maastricht University Library http://www.maastrichtuniversity.nl/web/Library/home.htm
 # Copyright (C) 2010-2011 Seek You Too B.V. (CQ2) http://www.cq2.nl
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
 # 
 # This file is part of "Meresco Harvester"
 # 
@@ -34,7 +35,7 @@
     repositoryId = arguments.get('repositoryId', [None])[0]
 
     linkToStatusPage = "%s?%s" % (config["harvesterStatusURL"], escapeXml(urlencode(dict(domainId=domainId, repositoryId=repositoryId))))
-    statusLxml = XML(''.join(compose(any.getStatus(domainId=domainId, repositoryGroupId=repositoryGroupId, repositoryId=repositoryId))))
+    statusLxml = XML(''.join(compose(observable.any.getStatus(domainId=domainId, repositoryGroupId=repositoryGroupId, repositoryId=repositoryId))))
 
     yield "HTTP/1.0 200 OK\r\n"
     yield "Content-Type: application/rss+xml\r\n"
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/harvester/controlpanel/slowfoottemplates/getRepositories /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/meresco/harvester/controlpanel/slowfoottemplates/getRepositories
--- version_0/meresco/harvester/controlpanel/slowfoottemplates/getRepositories	2012-05-01 11:28:23.000000000 +0200
+++ version_1/meresco/harvester/controlpanel/slowfoottemplates/getRepositories	2012-05-02 09:06:55.000000000 +0200
@@ -10,35 +10,8 @@
   include('/saharageterror?errorCode=idDoesNotExist')
 else:
   #
-%><?xml version="1.0" encoding="UTF-8"?>
-<saharaget xmlns="http://sahara.cq2.org/xsd/saharaget.xsd">
-<%
-  include('/saharagetTime')
-%> 
- <request>
-  <verb>GetRepositories</verb>
-  <domainId><% escape_xml(domainId) %></domainId><%
-  if repositoryGroupId:
-    allGroups = [ repositoryGroupId ]
-%>
-    <repositoryGroupId><% escape_xml(repositoryGroupId) %></repositoryGroupId><%
-  else:
-    allGroups = groups
-  #
-%>
- </request>
- <GetRepositories>
-<%
-  for groupId in allGroups:
-    repositories = asxml(url('/' + domainId + '.' + groupId + '.repositoryGroup')).repositoryGroup.repositoryId
-    for repositoryId in repositories:
-      repositoryXml = asxml(url('/' + domainId + '.' + repositoryId + '.repository')).repository
-%>
-  <%=repositoryXml.xml()%>
-<%
-  #
-%>
- </GetRepositories>
-</saharaget><%
+  queryArgs = urlencode(dict(verb='GetRepositories', domainId=domainId, repositoryGroupId=repositoryGroupId))
+  repositoriesUrl = url('%s/get?%s' % (req.get_options()['internalServer'], queryArgs))
+  req.write(repositoriesUrl.read())
 #
 %>
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/harvester/controlpanel/slowfoottemplates/getStatus /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/meresco/harvester/controlpanel/slowfoottemplates/getStatus
--- version_0/meresco/harvester/controlpanel/slowfoottemplates/getStatus	2012-05-01 11:28:23.000000000 +0200
+++ version_1/meresco/harvester/controlpanel/slowfoottemplates/getStatus	2012-05-02 09:06:55.000000000 +0200
@@ -24,7 +24,7 @@
   include('/saharageterror?errorCode=idDoesNotExist')
 else:
   type('text/xml; charset=utf-8')
-queryArgs = urlencode(dict(domainId=domainId, repositoryGroupId=args.repositoryGroupId, repositoryId=args.repositoryId))
-statusUrl = url('%s/getStatus?%s' % (req.get_options()['internalServer'], queryArgs))
+queryArgs = urlencode(dict(verb='GetStatus', domainId=domainId, repositoryGroupId=args.repositoryGroupId, repositoryId=args.repositoryId))
+statusUrl = url('%s/get?%s' % (req.get_options()['internalServer'], queryArgs))
 req.write(statusUrl.read())
 %>
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/harvester/harvesterdata.py /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/meresco/harvester/harvesterdata.py
--- version_0/meresco/harvester/harvesterdata.py	2012-05-01 11:28:23.000000000 +0200
+++ version_1/meresco/harvester/harvesterdata.py	2012-05-02 09:06:55.000000000 +0200
@@ -6,7 +6,8 @@
 # SURFnet by:
 # Seek You Too B.V. (CQ2) http://www.cq2.nl 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
 # 
 # This file is part of "Meresco Harvester"
 # 
@@ -29,6 +30,10 @@
 from lxml.etree import parse
 from os.path import join
 
+from re import compile as compileRe
+
+XMLHEADER = compileRe(r'(?s)^(?P<header>\<\?.*\?\>\s+)?(?P<body>.*)$')
+
 class HarvesterData(object):
 
     def __init__(self, dataPath):
@@ -38,12 +43,27 @@
         lxml = parse(open(join(self._dataPath, '%s.domain' % domainId)))
         return lxml.xpath("/domain/repositoryGroupId/text()")
 
-    def getRepositoryIds(self, domainId, repositoryGroupId):
-        lxml = parse(open(join(self._dataPath, '%s.%s.repositoryGroup' % (domainId, repositoryGroupId))))
-        return lxml.xpath("/repositoryGroup/repositoryId/text()")
+    def getRepositoryIds(self, domainId, repositoryGroupId=None):
+        result = []
+        allIds = self.getRepositoryGroupIds(domainId) if repositoryGroupId is None else [repositoryGroupId]
+        for repositoryGroupId in allIds:
+            lxml = parse(open(join(self._dataPath, '%s.%s.repositoryGroup' % (domainId, repositoryGroupId))))
+            result.extend(lxml.xpath("/repositoryGroup/repositoryId/text()"))
+        return result
 
     def getRepositoryGroupId(self, domainId, repositoryId):
         lxml = parse(open(join(self._dataPath, '%s.%s.repository' % (domainId, repositoryId))))
         return lxml.xpath("/repository/repositoryGroupId/text()")[0]
 
+    def getRepositoryAsXml(self, domainId, repositoryId):
+        m = XMLHEADER.match(open(join(self._dataPath, '%s.%s.repository' % (domainId, repositoryId))).read())
+        return m.groupdict()['body']
+
+    def getRepositories(self, domainId, repositoryGroupId=None):
+        repositoryIds = self.getRepositoryIds(domainId=domainId, repositoryGroupId=repositoryGroupId)
+        yield '<GetRepositories>'
+        for repositoryId in repositoryIds:
+            yield self.getRepositoryAsXml(domainId=domainId, repositoryId=repositoryId)
+        yield '</GetRepositories>'
+
     
Binary files version_0/meresco/harvester/.namespaces.py.swp and /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/meresco/harvester/.namespaces.py.swp differ
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/meresco/harvester/server.py /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/meresco/harvester/server.py
--- version_0/meresco/harvester/server.py	2012-05-01 11:28:23.000000000 +0200
+++ version_1/meresco/harvester/server.py	2012-05-02 09:06:55.000000000 +0200
@@ -7,9 +7,9 @@
 # SURFnet by:
 # Seek You Too B.V. (CQ2) http://www.cq2.nl 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
-# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011-2012 Stichting Kennisnet http://www.kennisnet.nl
 # 
 # This file is part of "Meresco Harvester"
 # 
@@ -57,6 +57,7 @@
 staticHtmlPath = join(myPath, 'controlpanel', 'html')
 
 def dna(reactor, observableHttpServer, config):
+    harvesterData = HarvesterData(config["dataPath"])
     return \
         (Observable(),
             (observableHttpServer,
@@ -80,10 +81,10 @@
                             },
                             indexPage="/index.html",
                             ),
-                            (SaharaGet(saharaurl=config["saharaUrl"]),),
                             (RepositoryStatus(config["logPath"], config["statePath"]),
-                                (HarvesterData(config["dataPath"]),)    
-                            )
+                                (harvesterData,)
+                            ),
+                            (harvesterData,)
                         )
                     )
                 )
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/test/harvesterdatatest.py /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/test/harvesterdatatest.py
--- version_0/test/harvesterdatatest.py	2012-05-01 11:28:23.000000000 +0200
+++ version_1/test/harvesterdatatest.py	2012-05-02 09:06:55.000000000 +0200
@@ -6,7 +6,8 @@
 # SURFnet by:
 # Seek You Too B.V. (CQ2) http://www.cq2.nl 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Kennisnet http://www.kennisnet.nl
 # 
 # This file is part of "Meresco Harvester"
 # 
@@ -28,12 +29,13 @@
 
 from os.path import join
 from seecr.test import SeecrTestCase
+from weightless.core import compose
 
 from meresco.harvester.harvesterdata import HarvesterData
 
 class HarvesterDataTest(SeecrTestCase):
-
-    def testGetRepositoryGroupIds(self):
+    def setUp(self):
+        SeecrTestCase.setUp(self)
         open(join(self.tempdir, 'adomain.domain'), 'w').write("""<?xml version="1.0" encoding="UTF-8"?>
 <domain>
     <id>adomain</id>
@@ -41,10 +43,6 @@
     <repositoryGroupId>Group1</repositoryGroupId>
     <repositoryGroupId>Group2</repositoryGroupId>
 </domain>""")
-        hd = HarvesterData(self.tempdir)
-        self.assertEquals(["Group1", "Group2"], hd.getRepositoryGroupIds(domainId="adomain"))
- 
-    def testGetRepositoryIds(self):
         open(join(self.tempdir, 'adomain.Group1.repositoryGroup'), 'w').write("""<?xml version="1.0" encoding="UTF-8"?>
 <repositoryGroup>
   <id>Group1</id>
@@ -53,14 +51,74 @@
   <repositoryId>repository1</repositoryId>
   <repositoryId>repository2</repositoryId>
 </repositoryGroup>""")
-        hd = HarvesterData(self.tempdir)
-        self.assertEquals(["repository1", "repository2"], hd.getRepositoryIds(domainId="adomain", repositoryGroupId="Group1"))
-
-    def testGetRepositoryGroupId(self):
+        open(join(self.tempdir, 'adomain.Group2.repositoryGroup'), 'w').write("""<?xml version="1.0" encoding="UTF-8"?>
+<repositoryGroup>
+  <id>Group2</id>
+  <name xml:lang="nl">Groep2</name>
+  <name xml:lang="en">Group2</name>
+  <repositoryId>repository2_1</repositoryId>
+  <repositoryId>repository2_2</repositoryId>
+</repositoryGroup>""")
         open(join(self.tempdir, 'adomain.repository1.repository'), 'w').write("""<?xml version="1.0" encoding="UTF-8"?>
 <repository>
   <id>repository1</id>
   <repositoryGroupId>Group1</repositoryGroupId>
 </repository>""")
-        hd = HarvesterData(self.tempdir)
-        self.assertEquals("Group1", hd.getRepositoryGroupId(domainId="adomain", repositoryId="repository1"))
+        open(join(self.tempdir, 'adomain.repository2.repository'), 'w').write("""<repository>
+  <id>repository2</id>
+  <repositoryGroupId>Group1</repositoryGroupId>
+</repository>""")
+        open(join(self.tempdir, 'adomain.repository2_1.repository'), 'w').write("""<?xml version="1.0" encoding="UTF-8"?>
+<repository>
+  <id>repository2_1</id>
+  <repositoryGroupId>Group2</repositoryGroupId>
+</repository>""")
+        open(join(self.tempdir, 'adomain.repository2_2.repository'), 'w').write("""<?xml version="1.0" encoding="UTF-8"?>
+<repository>
+  <id>repository2_2</id>
+  <repositoryGroupId>Group2</repositoryGroupId>
+</repository>""")
+        self.hd = HarvesterData(self.tempdir)
+
+    def testGetRepositoryGroupIds(self):
+        self.assertEquals(["Group1", "Group2"], self.hd.getRepositoryGroupIds(domainId="adomain"))
+ 
+    def testGetRepositoryIds(self):
+        self.assertEquals(["repository1", "repository2"], self.hd.getRepositoryIds(domainId="adomain", repositoryGroupId="Group1"))
+        self.assertEquals(["repository1", "repository2", "repository2_1", "repository2_2"], self.hd.getRepositoryIds(domainId="adomain"))
+
+    def testGetRepositoryGroupId(self):
+        self.assertEquals("Group1", self.hd.getRepositoryGroupId(domainId="adomain", repositoryId="repository1"))
+
+    def testGetRepositoryAsXml(self):
+        expected = """<repository>
+  <id>repository1</id>
+  <repositoryGroupId>Group1</repositoryGroupId>
+</repository>"""
+        self.assertEquals(expected, self.hd.getRepositoryAsXml(domainId='adomain', repositoryId='repository1'))
+
+    def testGetRepositoryAsXmlWithoutXMLHeader(self):
+        expected = """<repository>
+  <id>repository2</id>
+  <repositoryGroupId>Group1</repositoryGroupId>
+</repository>"""
+        self.assertEquals(expected, self.hd.getRepositoryAsXml(domainId='adomain', repositoryId='repository2'))
+
+    def testGetRepositories(self):
+        result = ''.join(compose(self.hd.getRepositories(domainId='adomain')))
+        self.assertEqualsWS("""<GetRepositories>
+<repository>
+    <id>repository1</id>
+    <repositoryGroupId>Group1</repositoryGroupId>
+</repository><repository>
+    <id>repository2</id>
+        <repositoryGroupId>Group1</repositoryGroupId>
+</repository><repository>
+    <id>repository2_1</id>
+    <repositoryGroupId>Group2</repositoryGroupId>
+</repository><repository>
+    <id>repository2_2</id>
+    <repositoryGroupId>Group2</repositoryGroupId>
+</repository>
+        </GetRepositories>""", result)
+
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/test/integration/harvestertest.py /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/test/integration/harvestertest.py
--- version_0/test/integration/harvestertest.py	2012-05-01 11:28:23.000000000 +0200
+++ version_1/test/integration/harvestertest.py	2012-05-02 09:06:55.000000000 +0200
@@ -1,31 +1,34 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011-2012 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from __future__ import with_statement
 
 from os import system, waitpid, listdir, remove, kill
@@ -129,7 +132,7 @@
         logLen = len(self.getLogs())
         self.assertEquals(BATCHSIZE, self.sizeDumpDir())
 
-        header, result = getRequest(self.harvesterInternalServerPortNumber, '/getStatus', {'domainId': DOMAIN, 'repositoryId': REPOSITORY}, parse='lxml')
+        header, result = getRequest(self.harvesterInternalServerPortNumber, '/get', {'verb': 'GetStatus', 'domainId': DOMAIN, 'repositoryId': REPOSITORY}, parse='lxml')
         self.assertEquals(['8'], xpath(result, "/status:saharaget/status:GetStatus/status:status/status:total/text()"))
         self.assertEquals(8, State(join(self.harvesterStateDir, DOMAIN), REPOSITORY).total)
         
@@ -149,7 +152,7 @@
         for filename in sorted(listdir(self.dumpDir))[-8:]:
             self.assertTrue('_delete.updateRequest' in filename, filename)
 
-        header, result = getRequest(self.harvesterInternalServerPortNumber, '/getStatus', {'domainId': DOMAIN, 'repositoryId': REPOSITORY}, parse='lxml')
+        header, result = getRequest(self.harvesterInternalServerPortNumber, '/get', {'verb': 'GetStatus', 'domainId': DOMAIN, 'repositoryId': REPOSITORY}, parse='lxml')
         self.assertEquals(['0'], xpath(result, "/status:saharaget/status:GetStatus/status:status/status:total/text()"))
         self.assertEquals(0, State(join(self.harvesterStateDir, DOMAIN), REPOSITORY).total)
 
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/test/integration/internalservertest.py /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/test/integration/internalservertest.py
--- version_0/test/integration/internalservertest.py	2012-05-01 11:28:23.000000000 +0200
+++ version_1/test/integration/internalservertest.py	2012-05-02 09:06:55.000000000 +0200
@@ -7,9 +7,9 @@
 # SURFnet by:
 # Seek You Too B.V. (CQ2) http://www.cq2.nl 
 # 
-# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
-# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011-2012 Stichting Kennisnet http://www.kennisnet.nl
 # 
 # This file is part of "Meresco Harvester"
 # 
@@ -71,7 +71,7 @@
     def testGetStatusForDomainAndRepositoryId(self):
         self.controlHelper(action='allInvalid')
         self.startHarvester(repository=REPOSITORY)
-        header, result = getRequest(self.harvesterInternalServerPortNumber, '/getStatus', {'domainId': 'adomain', 'repositoryId': 'integrationtest'}, parse='lxml')
+        header, result = getRequest(self.harvesterInternalServerPortNumber, '/get', {'verb': 'GetStatus', 'domainId': 'adomain', 'repositoryId': 'integrationtest'}, parse='lxml')
         self.assertEquals("GetStatus", xpath(result, "/status:saharaget/status:request/status:verb/text()")[0])
         self.assertEquals("adomain", xpath(result, "/status:saharaget/status:request/status:domainId/text()")[0])
         self.assertEquals("integrationtest", xpath(result, "/status:saharaget/status:request/status:repositoryId/text()")[0])
@@ -81,18 +81,28 @@
     def testGetStatusForDomain(self):
         self.controlHelper(action='allInvalid')
         self.startHarvester(repository=REPOSITORY)
-        header, result = getRequest(self.harvesterInternalServerPortNumber, '/getStatus', {'domainId': 'adomain'}, parse='lxml')
+        header, result = getRequest(self.harvesterInternalServerPortNumber, '/get', {'verb': 'GetStatus', 'domainId': 'adomain'}, parse='lxml')
         self.assertEquals(2, len(xpath(result, "/status:saharaget/status:GetStatus/status:status")))
         self.assertEquals("adomain", xpath(result, "/status:saharaget/status:request/status:domainId/text()")[0])
 
     def testGetStatusForDomainAndRepositoryGroup(self):
         self.controlHelper(action='allInvalid')
         self.startHarvester(repository=REPOSITORY)
-        header, result = getRequest(self.harvesterInternalServerPortNumber, '/getStatus', {'domainId': 'adomain', 'repositoryGroupId': 'IntegrationTest'}, parse='lxml')
+        header, result = getRequest(self.harvesterInternalServerPortNumber, '/get', {'verb': 'GetStatus', 'domainId': 'adomain', 'repositoryGroupId': 'IntegrationTest'}, parse='lxml')
         self.assertEquals(1, len(xpath(result, "/status:saharaget/status:GetStatus/status:status")))
         self.assertEquals("adomain", xpath(result, "/status:saharaget/status:request/status:domainId/text()")[0])
         self.assertEquals("IntegrationTest", xpath(result, "/status:saharaget/status:request/status:repositoryGroupId/text()")[0])
 
+    def testGetRepositoriesForDomain(self):
+        header, result = getRequest(self.harvesterInternalServerPortNumber, '/get', {'verb': 'GetRepositories', 'domainId': 'adomain'}, parse='lxml')
+        self.assertEquals(2, len(xpath(result, "/status:saharaget/status:GetRepositories/status:repository")))
+        self.assertEquals(['integrationtest', 'repository2'], xpath(result, "/status:saharaget/status:GetRepositories/status:repository/status:id/text()"))
+
+    def testGetRepositoriesForDomainAndRepositoryGroup(self):
+        header, result = getRequest(self.harvesterInternalServerPortNumber, '/get', {'verb': 'GetRepositories', 'domainId': 'adomain', 'repositoryGroupId': 'IntegrationTest'}, parse='lxml')
+        self.assertEquals(1, len(xpath(result, "/status:saharaget/status:GetRepositories/status:repository")))
+        self.assertEquals(["integrationtest"], xpath(result, "/status:saharaget/status:GetRepositories/status:repository/status:id/text()"))
+
     def testRssForHarvesterStatus(self):
         self.controlHelper(action="noneInvalid")
         self.startHarvester(repository=REPOSITORY)
Binary files version_0/test/integration/.internalservertest.py.swp and /home/edurep/development/meresco-harvester/workingsets/8.1.2-Edurep/version_1/test/integration/.internalservertest.py.swp differ

<%
from lxml.etree import tostring
from seecr.zulutime import ZuluTime
domainId = args.domainId
originalArgs = dict(domainId=domainId, repositoryGroupId=args.repositoryGroupId, repositoryId=args.repositoryId)

statuses = req.proxy.getStatus(**originalArgs)

loggedIn = bool(session.get('username', ''))

invalid = {}
for status in statuses:
    invalid[status.get('repositoryId')] = status
#
%>
<h1>Harvester Status</h1>
<h2>Domain: <%=domainId%> <a href="/running.rss?<%= urlencode(dict(domainId=domainId)) %>"><img src="/images/rss.png"/></a></h2>
<div>
<%
if originalArgs['repositoryGroupId']:
    %><h3>RepositoryGroup: <%=originalArgs['repositoryGroupId']%></h3><%
#
%>
<%
if originalArgs['repositoryId']:
    %><h3>Repository: <%=originalArgs['repositoryId']%></h3><%
#
%>
<table class="event tablesorter" width="100%" cellspacing="0" cellpadding="0">
<thead>
<tr class="eventheader">
<th>Repository</th>
<th>Last successful harvest</th>
<th>Total records</th>
<th title="Harvested/Uploaded/Deleted">H/U/D</th>
<th>#Validation<br/>Errors</th>
<th>#Errors</th>
<th>RSS</th>
</tr>
</thead>
<tbody>
<%
for status in sorted(statuses, key=lambda s: (s.get('repositoryGroupId', '').lower(), s.get('repositoryId'))):
  repositoryId = status.get('repositoryId')
  repositoryGroupId = status.get('repositoryGroupId')
  total = 0
  total += status.get('total', 0)
  errorsnr = int(status.get('totalerrors', 0))
  style = errorsnr and 'style="font-weight:bold"' or ''
  lastHarvestDate = status.get('lastHarvestDate') or ''
  if lastHarvestDate:
    lastHarvestDate = ZuluTime(lastHarvestDate).local()
  #
%>
<tr class="table_row">
<td <%=style%> class="link"><%='<a href="/page/repository.edit/?%s">' % urlencode(dict(domainId=domainId, identifier=repositoryId)) if loggedIn else ''%><% escape_html(repositoryId) %><%='</a>' if loggedIn else ''%></td>
<td <%=style%>><% escape_html(lastHarvestDate) %></td>
<td><% escape_html(status.get('total') or '') %></td>
<td><% escape_html(status.get('harvested') or '') %>/<% escape_html(status.get('uploaded') or '') %>/<% escape_html(status.get('deleted') or '') %></td>
<td class="link">
<%
  nrOfValidationErrors = int(invalid[repositoryId].get('invalid') or '0') if repositoryId in invalid else 0
  args = urlencode(dict(domainId=domainId, repositoryId=repositoryId))
  if nrOfValidationErrors > 0:
%>
    <a href="/page/invalid/?<%= args %>"><%=nrOfValidationErrors%> error<%='s' if nrOfValidationErrors != 1 else ''%></a>
<%
  #
%>
</td>
<td class="error">
<%
  if errorsnr:
%>
    <a name="top_<%= repositoryId %>" href="#<%= repositoryId %>"><%=errorsnr%> error<%='s' if errorsnr != 1 else ''%></a>
<%
  #
%>
</td>
<td class="link">
<a href="/rss?<%= args %>"><img src="/images/rss.png"/></a>
</td>
</tr>
<%
#
%>
</tbody>
</table>
<script type="text/javascript">

$.tablesorter.addParser({
        // set a unique id
        id: 'errors',
        is: function(s) {
            // return false so this parser is not auto detected
            return false;
        },
        format: function(s) {
            // format your data for normalization
            return s.toLowerCase().replace(/errors/,'');
        },
        // set type, either numeric or text
        type: 'numeric'
    });

$("table").tablesorter({
            headers: {
                3: {sorter: false},
                4: {sorter: 'errors'},
                5: {sorter: 'errors'},
                6: {sorter: false}
            },
            sortList: [[0,0]],
            sortInitialOrder: "desc"
        });

</script>
</div>

<div><h3>Harvester Errors</h3>
<table class="event" width="100%" cellspacing="0" cellpadding="0">
<%
for status in statuses:
  repositoryId = status.get('repositoryId')
  errorsnr = int(status.get('totalerrors') or '0')
  if errorsnr:
    #
%>
<tr class="eventinfo">
<td><a name="<%= repositoryId %>" href="#top_<%= repositoryId %>"><%= repositoryId %></a></td>
<td>Nr. of errors since: <b><%= errorsnr %></b></td>
</tr>
<%
    for error in status.get('recenterrors', []):
      #
%>
  <tr class="eventerror">
    <td nowrap="nowrap" valign="top"><%= error['date'] %></td>
    <td class="trace"><% escape_html(error['error'].split('|')[-1]) %></td>
  </tr>
<%
#
%>
</table>
</div>

<div><h3>Validatie Errors</h3>
<table class="event" width="100%" cellspacing="0" cellpadding="0">
<%
for status in statuses:
  repositoryId = status.get('repositoryId')
  invalidnr = int(status.get('invalid') or '0')
  if invalidnr:
    #
%>
<tr class="eventinfo">
<td><a name="<%= repositoryId %>" href="#top_<%= repositoryId %>"><%= repositoryId %></a></td>
</tr>
<tr>
<td>Nr. of validation errors: <strong><%= invalidnr %></strong></td>
</tr>
<%
    invalidIds = status.get('recentinvalids', [])
    for invalidId in invalidIds:
      recordId = invalidId.split(":", 1)[-1]
      newArgs = {'recordId': recordId, 'repositoryId': repositoryId, 'domainId': domainId}
      #
%>
      <tr>
        <td class="link">
          <a href="/page/invalidRecord/?<%= urlencode(newArgs)%>"><%= recordId%></a>
        </td>
      </tr>
<%
#
%>
</table>
</div>
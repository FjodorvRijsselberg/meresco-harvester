<h2>Test mapping</h2>
<p>
The mappings can be tested using an <i>online harvester</i>. It will harvest a certain repository and uses the mapping to provide a result which is directly shown on screen. This may help in testing the mapping.
</p>
<p>The mapping can be tested in two ways.<p>
<p>First by giving it a url which provides a OAI ListRecords answer. Something like: http://repository.example.org/oai?verb=ListRecords&metadataPrefix=oai_dc 

<form action="/onlinemapping" method="get">
<input type="hidden" name="mapping" value="<%=args.name%>">
<table>
<tr><td>Test URL</td><td><input type="text" name="inputurl" value="" size="30"></td></tr>
<tr><td>&nbsp;</td><td><input type="submit" class="butt" value="TEST"></tr>
</table>
</form>
</p>
<p>Secondly you can use one of the repositories known by Meresco Harvester.
<form action="/onlinemapping" method="get">
<input type="hidden" name="mapping" value="<%=args.name%>">
<table>
<tr><td>Test Repository</td>
<td>
<select name="inputurl">
<%
domainId = args.referrerDomain
print >> req, domainId
def isDomainRepository(filename):
  return filename.startswith(domainId + '.') and filename.endswith('.repository')
repositories = filter(isDomainRepository, files())
for rep in repositories:
    repXml = asxml(url('/'+rep)).repository
    inputurl = '%s?verb=ListRecords&metadataPrefix=%s'%(repXml.baseurl,repXml.metadataPrefix)
    if repXml.set:
      inputurl += '&set=%s'%repXml.set
    #
%>
  <option value="<%escape_html(inputurl)%>"><%=repXml.id%></option>
<%
#
%>
</select>
</td></tr>
<tr><td>&nbsp;</td><td><input type="submit" class="butt" value="TEST"></tr>
</table>
</form>
</p>

import page
import common

TYPES = dict(
   sruUpdate="SRU Update Target",
   filesystem="File System",
   composite="Multiple Targets",
)


def main(**kwargs):
    user = kwargs.get('session', {}).get('user')
    domain = kwargs.get('session', {}).get('domain')
    domainId = kwargs.get('arguments', {}).get('domainId', [None])[0]
    if not user or (not user.isAdmin() and domain != domainId):
        yield http.redirect("/login")
        return
    yield page.layoutWithMenu(_contents, **kwargs)


def _contents(arguments, session, **kwargs):
    identifier = arguments.get('identifier', [None])[0]
    domainId = arguments.get('referrerDomain', [None])[0]

    user = session.get('user')
    target = observable.call.getTarget(identifier)

    yield """<h1>Target Administration</h1>"""
    yield common.showErrorMessage(arguments)
    yield """
    <div>
        <h4>Target ({})</h4>""".format(escapeHtml(target.get('name') or '<No Name>'))
    if user.isAdmin():
        yield _adminView(target, domainId)
    else:
        yield _userView(target)
    yield """
    </div>
    <p><a href="{domainEditLink}">Back to domain</a></p>""".format(
        domainEditLink="/domain?{}".format(urlencode(dict(identifier=domainId))))


def _adminView(target, domainId):

    def _target_sruUpdate(target, domainId):
        yield """
            <tr>
                <td>Base URL: (without &quot;http://&quot;)</td>
                <td><input type="text" name="baseurl" value="{baseurl}" size="30"></td>
            </tr>
            <tr>
                <td>Path:</td>
                <td><input type="text" name="path" value="{path}" size="30"></td>
            </tr>
            <tr>
                <td>Port:</td>
                <td><input type="text" name="port" value="{port}" size="6"></td>
            </tr>""".format(
            baseurl=target.get('baseurl') or '',
            path=target.get('path') or '',
            port=target.get('port') or '')

    def _target_filesystem(target, domainId):
        yield """
           <tr>
               <td>Path:</td>
               <td><input type="text" name="path" value="{path}'" size="30"></td>
           </tr>
           <tr>
               <td>Wrap in OAI-Envelope:</td>
               <td><input type="checkbox" name="oaiEnvelope" value="true" {checked}></td>
           </tr>""".format(
            path=target.get('path') or '',
            checked='checked' if target.get('oaiEnvelope') else '')

    def _target_composite(target, domainId):
        targetId = target.get('identifier')
        delegateIds = target.get('delegateIds', [])
        targetIds = [each for each in observable.call.getDomain(domainId).get('targetIds', []) if each != targetId]
        options = [(each, observable.call.getTarget(each).get('name') or '') for each in targetIds]

        yield """
            <tr>
                <td style="vertical-align:top">Targets (hold CTRL/CMD to select multiple targets):</td>
                <td>"""
        yield common.dropdown(
            name="delegate",
            options=options,
            selected=lambda key: key in delegateIds,
            selectAttrs=dict(multiple="multiple", size=3))
        yield """
                </td>
            </tr>"""
    
    targetType = target.get('targetType')
    targetTypes = dict(
        sruUpdate=_target_sruUpdate,
        filesystem=_target_filesystem,
        composite=_target_composite)

    yield """
    <form method="post" action="/actions/updateTarget">
        <input type="hidden" name="redirectUri" value="{targetEditLink}">
        <table>
            <input type="hidden" name="identifier" value="{identifier}">
            <input type="hidden" name="targetType" value="{targetType}">
            <tr>
                <td>Name:</td>
                <td><input type="text" name="name" value="{name}"></td>
            </tr>
            <tr>
                <td>Type:</td>
                <td>{targetTypeName}</td>
            </tr>""".format(
        targetEditLink="/target?{}".format(urlencode(dict(referrerDomain=domainId))),
        identifier=target.get('identifier'),
        targetType=targetType,
        targetTypeName=TYPES.get(targetType, ''),
        name=target.get('name') or '')

    targetTypeRender = targetTypes.get(targetType)
    if targetTypeRender:
        yield targetTypeRender(target, domainId)

    yield """
        </table>
        <p><input type="submit" name="action" class="butt" value="Save" accesskey="s"></p>
    </form>"""


def _userView(target):
    yield """
 <table>
  <tr>
    <td>Name:</td>
    <td><%=target.get('name') or ''%></td>
  </tr>

  <tr>
    <td>Type:</td>
    <td><%=targetType%></td>
  </tr>

<%
  if targetType == 'sruUpdate':
%>
  <tr>
    <td>Base URL:</td>
    <td><%=target.get('baseurl') or ''%></td>
  </tr>

  <tr>
    <td>Path:</td>
    <td><%=target.get('path') or ''%></td>
  </tr>

  <tr>
    <td>Port:</td>
    <td><%=target.get('port') or ''%></td>
  </tr>
<%
  elif targetType == 'filesystem':
%>
  <tr>
    <td>Path:</td>
    <td><%=target.get('path') or ''%></td>
  </tr>
  <tr>
    <td>Wrap in OAI-Envelope:</td>
    <td><%='true' if target.get('oaiEnvelope') else 'false'%></td>
  </tr>
<%
  elif targetType == 'composite':
    #
%>
  <tr>
    <td>Targets:</td><td>&nbsp;</td>
  </tr>
<%
    for id in target.get('delegateIds', []):
      targetName = req.proxy.getTarget(id).get('name') or ''
%>
  <tr>
    <td><%escape_html(targetName)%></td>
    <td>
      <a href="/page/target.edit/?identifier=<%=id%>&amp;referrerDomain=<%= args.referrerDomain %>">
      View
      </a>
    </td>
  </tr>
<%
    #
  #
%>

 </table>"""

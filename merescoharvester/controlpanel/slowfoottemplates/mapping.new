<%
from cq2utils_old import binderytools
execcode = '''upload.parts['metadata'] = input.metadata.xml()

upload.parts['header'] = input.header.xml()

upload.parts['meta'] = """<meta xmlns="http://meresco.com/namespace/harvester/meta">
  <upload><id>%(id)s</id></upload>
  <record>
    <id>%(recordId)s</id>
  </record>
  <repository>
    <id>%(repository)s</id>
    <set>%(set)s</set>
    <baseurl>%(baseurl)s</baseurl>
    <repositoryGroupId>%(repositoryGroupId)s</repositoryGroupId>
    <metadataPrefix>%(metadataPrefix)s</metadataPrefix>
    <collection>%(collection)s</collection>
  </repository>
</meta>""" % dict([(k,xmlEscape(v)) for k,v in {
  'id': upload.id,
  'set': input.repository.set,
  'baseurl': input.repository.baseurl,
  'repositoryGroupId':  input.repository.repositoryGroupId,
  'repository': input.repository.id,
  'metadataPrefix': input.repository.metadataPrefix,
  'collection': input.repository.collection,
  'recordId': input.header.identifier,
}.items()])
'''
description = """This mapping is what has become the default mapping for most Meresco based projects.
"""

f = asform(input)
name = f.name
domain = xml

if name == '':
  redirect('/page/domain.edit/' + domain.domain.id + '.domain?error=No%20name%20given.')
else:
  mappingid = uuid()
  new_mapping = binderytools.bind_string("<mappingId>%s</mappingId>"%mappingid).mappingId

  domain.domain.xml_append(new_mapping)

  target(filepath(domain.domain.id + '.domain'))
  req.write(domain.xml())

  target(filepath(mappingid + ".mapping"))
%><?xml version="1.0"?>
<mapping>
  <id><%=mappingid%></id>
  <name><%= name %></name>
  <code><% escape_xml(execcode) %></code>
  <description><% escape_xml(description) %></description>
</mapping>
<%
  redirect(uri(path='/page/mapping.edit/' + mappingid + '.mapping', query={'referrerDomain':domain.domain.id}))
#
%>
